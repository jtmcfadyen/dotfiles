" Set important vim directories and file paths
set backupdir=~/.vim/backup//
set directory=~/.vim/swap//
set runtimepath=~/.vim,~/.vim/after,$VIM,$VIMRUNTIME
set undodir=~/.vim/undo//
set viminfo='100,<50,s10,h,n~/.vim/viminfo

" General
filetype plugin on
set backspace=indent,eol,start
set hidden
set history=50
set nocompatible " No need for legacy vi support
set nomodeline
set switchbuf=usetab
set path+=** " Search down into subfolders, provides tab completion for files
set wildmenu " Display all matching files with tab complete

" Appearance, numbering, syntax
colorscheme elflord
set background=dark
set colorcolumn=101
set number
set ruler
set relativenumber
set splitright
set textwidth=100
syntax on

" Indentation, tab, and space behavior
set autoindent
set expandtab
set shiftwidth=4 " indent also with 4 spaces
set smarttab
set softtabstop=4
set tabstop=4

" Search
set hlsearch " highlight all search matches
set ignorecase " ignore case for searches
set incsearch " start searching as you type
set smartcase " case sensitive search when string contains uppercase char

" in insert mode 'jk' will generate Escape
imap jk <Esc>

"" Directional split navigation
nmap <c-j> <c-w>j
nmap <c-k> <c-w>k
nmap <c-h> <c-w>h
nmap <c-l> <c-w>l

function TrimWhiteSpace()
  let l:save = winsaveview()
  :s/\s\+$//e
  call winrestview(l:save)
endfunction

" This would automatically trim whitespace every time the buffer is written for specific file types
" autocmd FileType c,python,text autocmd BufWritePre <buffer> :call TrimWhiteSpace()<CR>

noremap <F12> :call TrimWhiteSpace()<CR>

autocmd FileType gitcommit setlocal spell textwidth=72 colorcolumn=73
autocmd BufNewFile,BufRead *.inc set filetype=sh

" Use F2 to toggle paste mode on and off, with some visual feedback in normal mode
nnoremap <F2> :set invpaste paste?<CR>
set pastetoggle=<F2>
set showmode
